package com.autoproject.${moduleName}.business.${packageName}.entity.vo;

import com.autoproject.${moduleName}.business.${packageName}.entity.vo.${entityPrefix}VO;
import com.autoproject.common.base.pojo.BaseParameters;
import com.autoproject.common.base.pojo.Operations;
<%
	for (entity in entityNames) {
		println('import com.autoproject.'+moduleName+'.business.'+strutil.toLowerCase(entity)+'.entity.po.'+ entity +'PO;');
	}
%>
<% var date = date(); %>
/* 
 * @author :  autoproject
 * @Description: Automatically generated by autoproject
 * @date: ${ date , dateFormat="yyyy-MM-dd"}
 */
public class ${entityPrefix}ExParameter extends BaseParameters<${entityPrefix}VO>{
	@Override
	public String operational(String currentColumn) { 
		<%
			println();
		    for (operation in operations) {
				println('		if ("' + operation.key +'".equals(currentColumn)) {');
				println(' 			return Operations.' + operation.value + ';');
				println('		}');
				println();
			}
		%>
		return null;
	}

	@Override
	public Class<?>[] entityClass() { 
		return new Class<?>[]{<% 
					var len = 0;
					for (entity in entityNames) {
						print(entity +'PO.class');
						len ++;
						if (len < entityNames.~size) {
							print(', ');
						}
					
					}
					%>};
					
	}
	
	@Override
	public String columns() {
		<%
			if (columns == null || columns.~size == 0 ) {
				println('		return null;');
			} else {
				var i = 0;
				print('		return "');
				for (column in columns) {
					i ++;
					print(column);
					if (i != columns.~size) {
						print(',');
					}
				}
				println('";');
			}
		%>
	}
}